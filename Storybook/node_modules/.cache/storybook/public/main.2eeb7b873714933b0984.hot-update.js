webpackHotUpdate("main",{

/***/ "./stories/Ubung11/Page11Primzahlen.js":
/*!*********************************************!*\
  !*** ./stories/Ubung11/Page11Primzahlen.js ***!
  \*********************************************/
/*! exports provided: createPage11Primzahlen */
/*! exports used: createPage11Primzahlen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return createPage11Primzahlen; });
function _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError("Cannot destructure undefined"); }

var createPage11Primzahlen = function createPage11Primzahlen(_ref) {
  _objectDestructuringEmpty(_ref);

  var article = document.createElement('article');
  var section = "\n  <style>\n    table, th, td {\n    border: 1px solid black;\n    }\n    \n  </style>\n  <script src=\"/Style/prism.js\"></script>\n  <link rel=\"stylesheet\" href=\"/Style/prism.css\">\n  <p>In dieser Aufgabe wurde eine Funktion f\xFCr die Berechnung von der Anzahl von Primzahlen entwickelt (In den Zahlen bis 100.000 sind es 9592 Primzahlen). DIese wurde sowohl in C als auch in JavaScript implementiert. Aus der C Datei wurde anschlie\xDFend eine WASM und eine WAT Datei konvertiert </p>\n  <link rel=\"stylesheet\" href=\"/Style/SummaryStyle.css\">\n\n  <details>\n  <summary> Source Code CalcPrim.c</summary>\n\n\n  <pre>\n\t\t<code class=\"language-clike\">\n\t\tlong prims[10000];\n\n\t\ttypedef int bool;\n\t\t#define true 1\n\t\t#define false 0\n\n\t\tint currentcount = 0;\n\n\t\tbool testPrim(long numb)\n\t\t{\n\t\t\tfor(long i = 0; i &lt; currentcount;i++)\n\t\t\t{\n\t\t\t\tif(numb%prims[i]==0)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\tprims[currentcount] = numb;\n\t\t\tcurrentcount++;\n\t\t\treturn true;\n\t\t}\n\t\tbool testPrims(long numb)\n\t\t{\n\t\tfor(int i= 2; i&lt;numb ;i++)\n\t\t{\n\t\t\ttestPrim(i);\n\t\t}\n\t\treturn currentcount;\n\t\t}\n\t\t</code>\n\t</pre>\n\t</details>\n  \n\t<details>\n  <summary> Source Code CalcPrim.wat</summary>\n\n\n  <pre>\n\t\t<code class=\"language-clike\">\n\t\t(module\n\t\t\t(table 0 anyfunc)\n\t\t\t(memory $0 1)\n\t\t\t(data (i32.const 12) \"\\00\\00\\00\\00\")\n\t\t\t(export \"memory\" (memory $0))\n\t\t\t(export \"testPrim\" (func $testPrim))\n\t\t\t(export \"testPrims\" (func $testPrims))\n\t\t\t(func $testPrim (; 0 ;) (param $0 i32) (result i32)\n\t\t\t (local $1 i32)\n\t\t\t (local $2 i32)\n\t\t\t (local $3 i32)\n\t\t\t (block $label$0\n\t\t\t  (block $label$1\n\t\t\t   (br_if $label$1\n\t\t\t\t(i32.lt_s\n\t\t\t\t (tee_local $1\n\t\t\t\t  (i32.load offset=12\n\t\t\t\t   (i32.const 0)\n\t\t\t\t  )\n\t\t\t\t )\n\t\t\t\t (i32.const 1)\n\t\t\t\t)\n\t\t\t   )\n\t\t\t   (set_local $2\n\t\t\t\t(i32.const 16)\n\t\t\t   )\n\t\t\t   (set_local $3\n\t\t\t\t(i32.const 0)\n\t\t\t   )\n\t\t\t   (loop $label$2\n\t\t\t\t(br_if $label$0\n\t\t\t\t (i32.eqz\n\t\t\t\t  (i32.rem_s\n\t\t\t\t   (get_local $0)\n\t\t\t\t   (i32.load\n\t\t\t\t\t(get_local $2)\n\t\t\t\t   )\n\t\t\t\t  )\n\t\t\t\t )\n\t\t\t\t)\n\t\t\t\t(set_local $2\n\t\t\t\t (i32.add\n\t\t\t\t  (get_local $2)\n\t\t\t\t  (i32.const 4)\n\t\t\t\t )\n\t\t\t\t)\n\t\t\t\t(br_if $label$2\n\t\t\t\t (i32.lt_s\n\t\t\t\t  (tee_local $3\n\t\t\t\t   (i32.add\n\t\t\t\t\t(get_local $3)\n\t\t\t\t\t(i32.const 1)\n\t\t\t\t   )\n\t\t\t\t  )\n\t\t\t\t  (get_local $1)\n\t\t\t\t )\n\t\t\t\t)\n\t\t\t   )\n\t\t\t  )\n\t\t\t  (i32.store offset=12\n\t\t\t   (i32.const 0)\n\t\t\t   (i32.add\n\t\t\t\t(get_local $1)\n\t\t\t\t(i32.const 1)\n\t\t\t   )\n\t\t\t  )\n\t\t\t  (i32.store\n\t\t\t   (i32.add\n\t\t\t\t(i32.shl\n\t\t\t\t (get_local $1)\n\t\t\t\t (i32.const 2)\n\t\t\t\t)\n\t\t\t\t(i32.const 16)\n\t\t\t   )\n\t\t\t   (get_local $0)\n\t\t\t  )\n\t\t\t  (return\n\t\t\t   (i32.const 1)\n\t\t\t  )\n\t\t\t )\n\t\t\t (i32.const 0)\n\t\t\t)\n\t\t\t(func $testPrims (; 1 ;) (param $0 i32) (result i32)\n\t\t\t (local $1 i32)\n\t\t\t (local $2 i32)\n\t\t\t (local $3 i32)\n\t\t\t (local $4 i32)\n\t\t\t (set_local $1\n\t\t\t  (i32.load offset=12\n\t\t\t   (i32.const 0)\n\t\t\t  )\n\t\t\t )\n\t\t\t (block $label$0\n\t\t\t  (br_if $label$0\n\t\t\t   (i32.lt_s\n\t\t\t\t(get_local $0)\n\t\t\t\t(i32.const 3)\n\t\t\t   )\n\t\t\t  )\n\t\t\t  (set_local $2\n\t\t\t   (i32.const 2)\n\t\t\t  )\n\t\t\t  (loop $label$1\n\t\t\t   (block $label$2\n\t\t\t\t(block $label$3\n\t\t\t\t (br_if $label$3\n\t\t\t\t  (i32.lt_s\n\t\t\t\t   (get_local $1)\n\t\t\t\t   (i32.const 1)\n\t\t\t\t  )\n\t\t\t\t )\n\t\t\t\t (set_local $4\n\t\t\t\t  (i32.const 0)\n\t\t\t\t )\n\t\t\t\t (set_local $3\n\t\t\t\t  (i32.const 16)\n\t\t\t\t )\n\t\t\t\t (loop $label$4\n\t\t\t\t  (br_if $label$2\n\t\t\t\t   (i32.eqz\n\t\t\t\t\t(i32.rem_s\n\t\t\t\t\t (get_local $2)\n\t\t\t\t\t (i32.load\n\t\t\t\t\t  (get_local $3)\n\t\t\t\t\t )\n\t\t\t\t\t)\n\t\t\t\t   )\n\t\t\t\t  )\n\t\t\t\t  (set_local $3\n\t\t\t\t   (i32.add\n\t\t\t\t\t(get_local $3)\n\t\t\t\t\t(i32.const 4)\n\t\t\t\t   )\n\t\t\t\t  )\n\t\t\t\t  (br_if $label$4\n\t\t\t\t   (i32.lt_s\n\t\t\t\t\t(tee_local $4\n\t\t\t\t\t (i32.add\n\t\t\t\t\t  (get_local $4)\n\t\t\t\t\t  (i32.const 1)\n\t\t\t\t\t )\n\t\t\t\t\t)\n\t\t\t\t\t(get_local $1)\n\t\t\t\t   )\n\t\t\t\t  )\n\t\t\t\t )\n\t\t\t\t)\n\t\t\t\t(i32.store offset=12\n\t\t\t\t (i32.const 0)\n\t\t\t\t (tee_local $3\n\t\t\t\t  (i32.add\n\t\t\t\t   (get_local $1)\n\t\t\t\t   (i32.const 1)\n\t\t\t\t  )\n\t\t\t\t )\n\t\t\t\t)\n\t\t\t\t(i32.store\n\t\t\t\t (i32.add\n\t\t\t\t  (i32.shl\n\t\t\t\t   (get_local $1)\n\t\t\t\t   (i32.const 2)\n\t\t\t\t  )\n\t\t\t\t  (i32.const 16)\n\t\t\t\t )\n\t\t\t\t (get_local $2)\n\t\t\t\t)\n\t\t\t\t(set_local $1\n\t\t\t\t (get_local $3)\n\t\t\t\t)\n\t\t\t   )\n\t\t\t   (br_if $label$1\n\t\t\t\t(i32.ne\n\t\t\t\t (tee_local $2\n\t\t\t\t  (i32.add\n\t\t\t\t   (get_local $2)\n\t\t\t\t   (i32.const 1)\n\t\t\t\t  )\n\t\t\t\t )\n\t\t\t\t (get_local $0)\n\t\t\t\t)\n\t\t\t   )\n\t\t\t  )\n\t\t\t )\n\t\t\t (get_local $1)\n\t\t\t)\n\t\t   )\n\t\t   \n\t\t</code>\n\t</pre>\n\t</details>\n\t<details>\n\t<summary> Source Code CalcPrim.js</summary>\n\n\n\t<pre>\n\t\t  <code class=\"language-javascript\">\n\t\t  var prims = [];\n\n\t\t\tfunction testPrim(numb)\n\t\t\t{\n\t\t\t\tfor(let i = 0; i < prims.length;i++)\n\t\t\t\t{\n\t\t\t\t\tif(numb%prims[i]==0)\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tprims.push(numb);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconsole.time(\"CalcPrim\")\n\t\t\tfor(var i= 2; i<100000 ;i++)\n\t\t\t{\n\t\t\t\ttestPrim(i);\n\t\t\t}\n\t\t\tconsole.timeEnd(\"CalcPrim\")\n\t\t\tconsole.log(prims.length);\n\t\t\tconsole.log(prims);\n\n\t\t\t \n\t\t  </code>\n\t  </pre>\n\t  </details>\n\n\t  <details>\n\t<summary> Messergebnisse</summary>\n\n\n\t\n\t  </details>\n \n\t\t\t\n\n\t\n\n<script>\n\nfunction addTD(value,parent_element,type=\"td\")\n{\n    let td = document.createElement(type);\n    td.innerHTML=value;\n    parent_element.append(td)\n\treturn td;\n}\n\n\n\n\n\n\n\n\nvar ggts = [];\nfetch('/U11/ggt.wasm').then(response =>\n  response.arrayBuffer()\n).then(bytes =>\n  WebAssembly.instantiate(bytes,{})\n).then(wasmInstance => {\n    \n    const {ggt} = wasmInstance.instance.exports;\n\n    for (let i = 1; i <= 100; i++) {\n\t\tfor (let j = 1; j <= 100; j++) {\n\t\t\tggts.push(\n\t\t\t{\"x\": i,\n\t\t\t \"y\": j,\n\t\t\t \"ggt\":ggt(i, j)\n\t\t\t})\n\t  }\n\t}\n\tconsole.log(ggts);\n\ttable = document.getElementById(\"GGTs\");\n\t//Header\n    tr = document.createElement(\"tr\");\n\taddTD(\" \",tr,\"th\");\n    for (var i = 1; i<101;i++)\n    {\n\t\taddTD(\"\"+i,tr,\"th\");\n    }\n\ttable.append(tr);\n    \n\t//Lines\n\ttr = document.createElement(\"tr\");\n    for (var i = 0; i<100;i++)\n    {\n\t\ttr = document.createElement(\"tr\");\n\t\taddTD(\" \"+(i+1),tr,\"th\");\n\t\tfor (var j = 0; j<100;j++)\n\t\t{\n\t\t\ttd = addTD(\"\"+ggts[(i*100)+j].ggt,tr);\n\t\t\tif(ggts[(i*100)+j].ggt ===1)\n\t\t\t{\n\t\t\t\ttd.classList.add(\"ggt1\");\n\t\t\t}\n\t\t\tif(ggts[(i*100)+j].y === ggts[(i*100)+j].x)\n\t\t\t{\n\t\t\t\ttd.classList.add(\"ggtself\");\n\t\t\t}\n\t\t}\n\t\ttable.append(tr);\n    }\n\t\n\n\n\n\n    \n});\n\n\n\n\n\n\n</script>\n\n\n\n";
  article.insertAdjacentHTML('beforeend', section);
  return section;
};

/***/ })

})
//# sourceMappingURL=main.2eeb7b873714933b0984.hot-update.js.map