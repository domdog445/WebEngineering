{"version":3,"file":"main.59bdccf3ba9e279218db.hot-update.js","sources":["webpack:///./stories/Ubung5/Page5.stories.js","webpack:///./stories/Ubung5/Page5AsyncAwait.js"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { createPage5Promises } from './Page5Promises'\\nimport { createPage5AsyncAwait } from './Page5AsyncAwait'\\n\\nexport default {\\n  title: 'Lösungen der Übungen/Übung 05',\\n  argTypes: {},\\n};\\n\\nconst Template = (args) => createPage5Promises(args);\\nexport const AB_Promises = Template.bind({});\\n\\nconst TemplateAsync = (args) => createPage5AsyncAwait(args);\\nexport const AB_AsyncAwait = TemplateAsync.bind({});\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"AB_Promises\":{\"startLoc\":{\"col\":17,\"line\":9},\"endLoc\":{\"col\":52,\"line\":9},\"startBody\":{\"col\":17,\"line\":9},\"endBody\":{\"col\":52,\"line\":9}},\"AB_AsyncAwait\":{\"startLoc\":{\"col\":22,\"line\":12},\"endLoc\":{\"col\":59,\"line\":12},\"startBody\":{\"col\":22,\"line\":12},\"endBody\":{\"col\":59,\"line\":12}}};\n    \nimport { createPage5Promises } from './Page5Promises'\nimport { createPage5AsyncAwait } from './Page5AsyncAwait'\n\nexport default {\n  title: 'Lösungen der Übungen/Übung 05',\n  argTypes: {},\n};\n\nconst Template = (args) => createPage5Promises(args);\nexport const AB_Promises = Template.bind({});;\n\nconst TemplateAsync = (args) => createPage5AsyncAwait(args);\nexport const AB_AsyncAwait = TemplateAsync.bind({});\n\n\n\n\nAB_Promises.parameters = { storySource: { source: \"(args) => createPage5Promises(args)\" }, ...AB_Promises.parameters };\nAB_AsyncAwait.parameters = { storySource: { source: \"(args) => createPage5AsyncAwait(args)\" }, ...AB_AsyncAwait.parameters };","export const createPage5AsyncAwait = ({\n}) => {\n  const article = document.createElement('article');\n\n  const section = `\n  <!DOCTYPE html>\n\n<body>\n\t<div id=\"Status\"> Load A.txt & B.txt </div>\n\t<div id=\"ABs\"> </div>\n</body>\n\n\n<script>\nvar Status = document.getElementById('Status');\nvar ABs = document.getElementById('ABs');\n\nfunction get(url)\n{\n\treturn new Promise(function(resolve,reject)\n\t{\n\t\tvar req = new XMLHttpRequest();\n\t\treq.open(\"GET\",url);\n\t\treq.onload = function(){\n\t\t\tif(req.status === 200)\n\t\t\t{\n\t\t\t\tresolve(req.response);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treject(Error(req.statustext));\n\t\t\t}\n\t\t}\n\t\treq.onerror = function(){\n\t\t\treject(Error(\"Network Error\"));\n\t\t}\n\n\t\treq.send();\n\n\t});\n}\nconsole.log(\"File loaded\");\n\nvar atxt = \"\";\nvar btxt = \"\";\n\n\nPromise.all([\n\tget(\"/U5/A.txt\").then((value)=> atxt = value),\n\tget(\"/U5/B.txt\").then((value)=> btxt = value)])\n\t.then(function()\n\t{\n\t\tresult = \"\";\n\t\t\t\t\n\t\tallA = atxt.split(\"\\\\r\\\\n\");\n\t\tallB = btxt.split(\"\\\\r\\\\n\");\n\t\t\t\t\n\t\ti = 0;\n\t\t\t\t\n\t\twhile(i < allA.length || i < allB.length)\n\t\t{\n\t\t\tif(i < allA.length)\n\t\t\t{\n\t\t\t\tresult += allA[i] +\"\\\\r\\\\n\";\n\t\t\t}\n\t\t\tif(i < allB.length)\n\t\t\t{\n\t\t\t\tresult += allB[i] +\"\\\\r\\\\n\";\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tconsole.log(result);\n\t\t\n\t\tStatus.innerHTML = \"A.txt + B.txt konkateniert \";\n\t\tABs.innerHTML = result;\n\t\t\n\t\treturn result;\n\t}).catch((mes) => Status.innerHTML = \"Fehler beim laden einer Datei: \" + mes)\n\t\t\t\n\n\n\n\n\n</script>\n\n\n\n\n\n`;\n\n  article.insertAdjacentHTML('beforeend', section);\n\n  return section;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AAAA;AAEA;AAwFA;AAEA;AACA;;;;A","sourceRoot":""}