{"version":3,"file":"main.ba57ae008a231411da81.hot-update.js","sources":["webpack:///./stories/Ubung11/Page11Primzahlen.js"],"sourcesContent":["export const createPage11Primzahlen = ({\n\n}) => {\n  const article = document.createElement('article');\n\n  const section = `\n  <style>\n    table, th, td {\n    border: 1px solid black;\n    }\n    \n  </style>\n  <script src=\"/Style/prism.js\"></script>\n  <link rel=\"stylesheet\" href=\"/Style/prism.css\">\n  <p>In dieser Aufgabe wurde eine Funktion für die Berechnung von der Anzahl von Primzahlen entwickelt (In den Zahlen bis 100.000 sind es 9592 Primzahlen). DIese wurde sowohl in C als auch in JavaScript implementiert. Aus der C Funktion wurde anschließend eine WASM Datei Konvertiert </p>\n  <link rel=\"stylesheet\" href=\"/Style/SummaryStyle.css\">\n\n  <details>\n  <summary> Source Code CalcPrim.c</summary>\n\n\n  <pre>\n\t\t<code class=\"language-clike\">\n\t\tlong prims[10000];\n\n\t\ttypedef int bool;\n\t\t#define true 1\n\t\t#define false 0\n\n\t\tint currentcount = 0;\n\n\n\t\tbool testPrim(long numb)\n\t\t{\n\t\t\tfor(long i = 0; i < currentcount;i++)\n\t\t\t{\n\t\t\t\tif(numb%prims[i]==0)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\tprims[currentcount] = numb;\n\t\t\tcurrentcount++;\n\t\t\treturn true;\n\t\t}\n\t\tbool testPrims(long numb)\n\t\t{\n\t\tfor(int i= 2; i<numb ;i++)\n\t\t{\n\t\t\ttestPrim(i);\n\t\t}\n\t\treturn currentcount;\n\t\t}\n\t\t  \n\t\t  \n\t\t\n\t\t</code>\n\t</pre>\n\t</details>\n  \n\t\n\n \n\t\t\t\n\n\t\n\n<script>\n\nfunction addTD(value,parent_element,type=\"td\")\n{\n    let td = document.createElement(type);\n    td.innerHTML=value;\n    parent_element.append(td)\n\treturn td;\n}\n\n\n\n\n\n\n\n\nvar ggts = [];\nfetch('/U11/ggt.wasm').then(response =>\n  response.arrayBuffer()\n).then(bytes =>\n  WebAssembly.instantiate(bytes,{})\n).then(wasmInstance => {\n    \n    const {ggt} = wasmInstance.instance.exports;\n\n    for (let i = 1; i <= 100; i++) {\n\t\tfor (let j = 1; j <= 100; j++) {\n\t\t\tggts.push(\n\t\t\t{\"x\": i,\n\t\t\t \"y\": j,\n\t\t\t \"ggt\":ggt(i, j)\n\t\t\t})\n\t  }\n\t}\n\tconsole.log(ggts);\n\ttable = document.getElementById(\"GGTs\");\n\t//Header\n    tr = document.createElement(\"tr\");\n\taddTD(\" \",tr,\"th\");\n    for (var i = 1; i<101;i++)\n    {\n\t\taddTD(\"\"+i,tr,\"th\");\n    }\n\ttable.append(tr);\n    \n\t//Lines\n\ttr = document.createElement(\"tr\");\n    for (var i = 0; i<100;i++)\n    {\n\t\ttr = document.createElement(\"tr\");\n\t\taddTD(\" \"+(i+1),tr,\"th\");\n\t\tfor (var j = 0; j<100;j++)\n\t\t{\n\t\t\ttd = addTD(\"\"+ggts[(i*100)+j].ggt,tr);\n\t\t\tif(ggts[(i*100)+j].ggt ===1)\n\t\t\t{\n\t\t\t\ttd.classList.add(\"ggt1\");\n\t\t\t}\n\t\t\tif(ggts[(i*100)+j].y === ggts[(i*100)+j].x)\n\t\t\t{\n\t\t\t\ttd.classList.add(\"ggtself\");\n\t\t\t}\n\t\t}\n\t\ttable.append(tr);\n    }\n\t\n\n\n\n\n    \n});\n\n\n\n\n\n\n</script>\n\n\n\n`;\n\n  article.insertAdjacentHTML('beforeend', section);\n\n  return section;\n};\n"],"mappings":";;;;;;;;;;;;;;AAAA;AAEA;AACA;AAAA;AAEA;AAiJA;AAEA;AACA;;;;A","sourceRoot":""}