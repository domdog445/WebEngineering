{"version":3,"file":"main.5c13d96fa2778da6edd7.hot-update.js","sources":["webpack:///./stories/Ubung10/Page10.stories.js","webpack:///./stories/Ubung10/Page10EingabeFeld.js"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { createPage10EingabeFeld } from './Page10EingabeFeld.js'\\n\\n\\nexport default {\\n  title: 'Lösungen der Übungen/Übung 10',\\n  argTypes: {},\\n};\\n\\nconst TemplateEingabefeld = (args) => createPage10EingabeFeld(args);\\nexport const EingabeFeld = TemplateEingabefeld.bind({});\\n\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"EingabeFeld\":{\"startLoc\":{\"col\":28,\"line\":9},\"endLoc\":{\"col\":67,\"line\":9},\"startBody\":{\"col\":28,\"line\":9},\"endBody\":{\"col\":67,\"line\":9}}};\n    \nimport { createPage10EingabeFeld } from './Page10EingabeFeld.js'\n\n\nexport default {\n  title: 'Lösungen der Übungen/Übung 10',\n  argTypes: {},\n};\n\nconst TemplateEingabefeld = (args) => createPage10EingabeFeld(args);\nexport const EingabeFeld = TemplateEingabefeld.bind({});\n\n\n\n\n\nEingabeFeld.parameters = { storySource: { source: \"(args) => createPage10EingabeFeld(args)\" }, ...EingabeFeld.parameters };","export const createPage9Overview= ({\n\n}) => {\n  const article = document.createElement('article');\n\n  const section = `\n\n  <link rel=\"stylesheet\" href=\"/Style/SummaryStyle.css\">\n\n  <details>\n  <summary> Beschreiben Sie hier Ihr Vorgehen, Ihre Libraries und Tools, die Sie einsetzen:</summary>\n  <p>\n \tMIthilfe von Exrpress wird eine html Datei über https und http zur verfügung gestellt.\n\tIn dieser HTML Datei wird ein Service Worker geladen, welcher die Dateien Offline verfügbar macht.\n\n\n\tLibaries:\n\tExpress: für den Online-Server\n\tFS:  für das lesen der Credentials\n\tPath: für das Verbinden von Pfaden\n\n\t<p>\n  </details>\n\n\n  <details>\n  <summary> Beschreiben Sie hier Ihre Probleme und Lösungskonzepte:</summary>\n\t<p>Lighthouse in Chrome funktionierte nicht. bzw. funktionierte nur über die Kommandozeile.\n\n\tDie Http Anfragen müssen zu HTTPs weitergeleitet werden\n\t=> Sichergehen das jede Anfrage zu \"https\" weiter geleitet wird (return res.redirect('https://' + req.headers.host + req.url);)\n\n\t</p>\n  </details>\n\n  <details>\n  <summary> Lighthouse-Messergebnisse</summary>\n  <p>\n\t<style type=\"text/css\">\n\t.tg  {border-collapse:collapse;border-spacing:0;}\n\t.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;\n\toverflow:hidden;padding:10px 5px;word-break:normal;}\n\t.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;\n\tfont-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n\t.tg .tg-baqh{text-align:center;vertical-align:top}\n\t.tg .tg-amwm{font-weight:bold;text-align:center;vertical-align:top}\n\t</style>\n\t<table class=\"tg\">\n\t<thead>\n\t<tr>\n\t\t<th class=\"tg-amwm\">Performance</th>\n\t\t<th class=\"tg-baqh\">100</th>\n\t</tr>\n\t</thead>\n\t<tbody>\n\t<tr>\n\t\t<td class=\"tg-amwm\">Accessibility</td>\n\t\t<td class=\"tg-baqh\">91</td>\n\t</tr>\n\t<tr>\n\t\t<td class=\"tg-amwm\">Best Pracices</td>\n\t\t<td class=\"tg-baqh\">100</td>\n\t</tr>\n\t<tr>\n\t\t<td class=\"tg-amwm\">SEO</td>\n\t\t<td class=\"tg-baqh\">82</td>\n\t</tr>\n\t</tbody>\n\t</table>\n\t<a href=\"/U9/PWAErgebnis.html\"> Hier geht es zum direkten Ergebniss von Lighthouse</a>\n  </p>\n  \n  </details>\n  <a href=\"/U9/PWADomenicZens.zip\"> Download der PWA als Zip</a>\n  \n\n`;\n\n  article.insertAdjacentHTML('beforeend', section);\n\n  return section;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;ACvBA;AAEA;AACA;AAAA;AAEA;AAyEA;AAEA;AACA;;;;A","sourceRoot":""}