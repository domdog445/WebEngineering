{"version":3,"file":"main.c6d445953bebb596011d.hot-update.js","sources":["webpack:///\\.)(?3be6","webpack:///./stories/Ubung11 - Copy/Page11.stories.js","webpack:///./stories/Ubung11 - Copy/Page11Primzahlen.js","webpack:///./stories/Ubung11 - Copy/Page11WATGGT.js"],"sourcesContent":["var map = {\n\t\"./Button.stories.js\": \"./stories/Button.stories.js\",\n\t\"./Header.stories.js\": \"./stories/Header.stories.js\",\n\t\"./Page.stories.js\": \"./stories/Page.stories.js\",\n\t\"./Ubung01/Page.1.3.stories.js\": \"./stories/Ubung01/Page.1.3.stories.js\",\n\t\"./Ubung01/UE1Display.stories.js\": \"./stories/Ubung01/UE1Display.stories.js\",\n\t\"./Ubung02/Page2.stories.js\": \"./stories/Ubung02/Page2.stories.js\",\n\t\"./Ubung03/Page3.stories.js\": \"./stories/Ubung03/Page3.stories.js\",\n\t\"./Ubung04/Page4.stories.js\": \"./stories/Ubung04/Page4.stories.js\",\n\t\"./Ubung05/Page5.stories.js\": \"./stories/Ubung05/Page5.stories.js\",\n\t\"./Ubung06/Page6.stories.js\": \"./stories/Ubung06/Page6.stories.js\",\n\t\"./Ubung07/Page7.stories.js\": \"./stories/Ubung07/Page7.stories.js\",\n\t\"./Ubung08/Page8.stories.js\": \"./stories/Ubung08/Page8.stories.js\",\n\t\"./Ubung09/Page9.stories.js\": \"./stories/Ubung09/Page9.stories.js\",\n\t\"./Ubung10/Page10.stories.js\": \"./stories/Ubung10/Page10.stories.js\",\n\t\"./Ubung11 - Copy/Page11.stories.js\": \"./stories/Ubung11 - Copy/Page11.stories.js\",\n\t\"./Ubung11/Page11.stories.js\": \"./stories/Ubung11/Page11.stories.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./stories sync recursive ^\\\\.(?:(?:^|[\\\\\\\\/]|(?:(?:(?!(?:^|[\\\\\\\\/])\\\\.).)*?)[\\\\\\\\/])(?!\\\\.)(?=.)[^\\\\\\\\/]*?\\\\.stories\\\\.(js|jsx|ts|tsx))$\";","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { createPage11WatGGT } from './Page11WATGGT'\\nimport { createPage11Primzahlen } from './Page11Primzahlen'\\n\\n\\nexport default {\\n  title: 'Lösungen der Übungen/Übung 11',\\n  argTypes: {},\\n};\\n\\nconst TemplateWAT = (args) => createPage11WatGGT(args);\\nexport const WATGGT = TemplateWAT.bind({});\\n\\nconst TemplatePrim = (args) => createPage11Primzahlen(args);\\nexport const WATPrimzahlen = TemplatePrim.bind({});\\n\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"WATGGT\":{\"startLoc\":{\"col\":20,\"line\":10},\"endLoc\":{\"col\":54,\"line\":10},\"startBody\":{\"col\":20,\"line\":10},\"endBody\":{\"col\":54,\"line\":10}},\"WATPrimzahlen\":{\"startLoc\":{\"col\":21,\"line\":13},\"endLoc\":{\"col\":59,\"line\":13},\"startBody\":{\"col\":21,\"line\":13},\"endBody\":{\"col\":59,\"line\":13}}};\n    \nimport { createPage11WatGGT } from './Page11WATGGT'\nimport { createPage11Primzahlen } from './Page11Primzahlen'\n\n\nexport default {\n  title: 'Lösungen der Übungen/Übung 11',\n  argTypes: {},\n};\n\nconst TemplateWAT = (args) => createPage11WatGGT(args);\nexport const WATGGT = TemplateWAT.bind({});;\n\nconst TemplatePrim = (args) => createPage11Primzahlen(args);\nexport const WATPrimzahlen = TemplatePrim.bind({});\n\n\n\n\n\nWATGGT.parameters = { storySource: { source: \"(args) => createPage11WatGGT(args)\" }, ...WATGGT.parameters };\nWATPrimzahlen.parameters = { storySource: { source: \"(args) => createPage11Primzahlen(args)\" }, ...WATPrimzahlen.parameters };","export const createPage11Primzahlen = ({\n\n}) => {\n  const article = document.createElement('article');\n\n  const section = `\n  <style>\n    table, th, td {\n    border: 1px solid black;\n    }\n    \n  </style>\n  <script src=\"/Style/prism.js\"></script>\n  <link rel=\"stylesheet\" href=\"/Style/prism.css\">\n  <p>In dieser Aufgabe wurde eine Funktion für die Berechnung von der Anzahl von Primzahlen entwickelt (In den Zahlen bis 100.000 sind es 9592 Primzahlen). DIese wurde sowohl in C als auch in JavaScript implementiert. Aus der C Datei wurde anschließend eine WASM und eine WAT Datei konvertiert </p>\n  <link rel=\"stylesheet\" href=\"/Style/SummaryStyle.css\">\n\n  <details>\n  <summary> Source Code CalcPrim.c</summary>\n\n\n  <pre>\n\t\t<code class=\"language-clike\">\n\t\tlong prims[10000];\n\n\t\ttypedef int bool;\n\t\t#define true 1\n\t\t#define false 0\n\n\t\tint currentcount = 0;\n\n\t\tbool testPrim(long numb)\n\t\t{\n\t\t\tfor(long i = 0; i &lt; currentcount;i++)\n\t\t\t{\n\t\t\t\tif(numb%prims[i]==0)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\tprims[currentcount] = numb;\n\t\t\tcurrentcount++;\n\t\t\treturn true;\n\t\t}\n\t\tbool testPrims(long numb)\n\t\t{\n\t\tfor(int i= 2; i&lt;numb ;i++)\n\t\t{\n\t\t\ttestPrim(i);\n\t\t}\n\t\treturn currentcount;\n\t\t}\n\t\t</code>\n\t</pre>\n\t</details>\n  \n\t<details>\n  <summary> Source Code CalcPrim.wat</summary>\n\n\n  <pre>\n\t\t<code class=\"language-clike\">\n\t\t(module\n\t\t\t(table 0 anyfunc)\n\t\t\t(memory $0 1)\n\t\t\t(data (i32.const 12) \"\\\\00\\\\00\\\\00\\\\00\")\n\t\t\t(export \"memory\" (memory $0))\n\t\t\t(export \"testPrim\" (func $testPrim))\n\t\t\t(export \"testPrims\" (func $testPrims))\n\t\t\t(func $testPrim (; 0 ;) (param $0 i32) (result i32)\n\t\t\t (local $1 i32)\n\t\t\t (local $2 i32)\n\t\t\t (local $3 i32)\n\t\t\t (block $label$0\n\t\t\t  (block $label$1\n\t\t\t   (br_if $label$1\n\t\t\t\t(i32.lt_s\n\t\t\t\t (tee_local $1\n\t\t\t\t  (i32.load offset=12\n\t\t\t\t   (i32.const 0)\n\t\t\t\t  )\n\t\t\t\t )\n\t\t\t\t (i32.const 1)\n\t\t\t\t)\n\t\t\t   )\n\t\t\t   (set_local $2\n\t\t\t\t(i32.const 16)\n\t\t\t   )\n\t\t\t   (set_local $3\n\t\t\t\t(i32.const 0)\n\t\t\t   )\n\t\t\t   (loop $label$2\n\t\t\t\t(br_if $label$0\n\t\t\t\t (i32.eqz\n\t\t\t\t  (i32.rem_s\n\t\t\t\t   (get_local $0)\n\t\t\t\t   (i32.load\n\t\t\t\t\t(get_local $2)\n\t\t\t\t   )\n\t\t\t\t  )\n\t\t\t\t )\n\t\t\t\t)\n\t\t\t\t(set_local $2\n\t\t\t\t (i32.add\n\t\t\t\t  (get_local $2)\n\t\t\t\t  (i32.const 4)\n\t\t\t\t )\n\t\t\t\t)\n\t\t\t\t(br_if $label$2\n\t\t\t\t (i32.lt_s\n\t\t\t\t  (tee_local $3\n\t\t\t\t   (i32.add\n\t\t\t\t\t(get_local $3)\n\t\t\t\t\t(i32.const 1)\n\t\t\t\t   )\n\t\t\t\t  )\n\t\t\t\t  (get_local $1)\n\t\t\t\t )\n\t\t\t\t)\n\t\t\t   )\n\t\t\t  )\n\t\t\t  (i32.store offset=12\n\t\t\t   (i32.const 0)\n\t\t\t   (i32.add\n\t\t\t\t(get_local $1)\n\t\t\t\t(i32.const 1)\n\t\t\t   )\n\t\t\t  )\n\t\t\t  (i32.store\n\t\t\t   (i32.add\n\t\t\t\t(i32.shl\n\t\t\t\t (get_local $1)\n\t\t\t\t (i32.const 2)\n\t\t\t\t)\n\t\t\t\t(i32.const 16)\n\t\t\t   )\n\t\t\t   (get_local $0)\n\t\t\t  )\n\t\t\t  (return\n\t\t\t   (i32.const 1)\n\t\t\t  )\n\t\t\t )\n\t\t\t (i32.const 0)\n\t\t\t)\n\t\t\t(func $testPrims (; 1 ;) (param $0 i32) (result i32)\n\t\t\t (local $1 i32)\n\t\t\t (local $2 i32)\n\t\t\t (local $3 i32)\n\t\t\t (local $4 i32)\n\t\t\t (set_local $1\n\t\t\t  (i32.load offset=12\n\t\t\t   (i32.const 0)\n\t\t\t  )\n\t\t\t )\n\t\t\t (block $label$0\n\t\t\t  (br_if $label$0\n\t\t\t   (i32.lt_s\n\t\t\t\t(get_local $0)\n\t\t\t\t(i32.const 3)\n\t\t\t   )\n\t\t\t  )\n\t\t\t  (set_local $2\n\t\t\t   (i32.const 2)\n\t\t\t  )\n\t\t\t  (loop $label$1\n\t\t\t   (block $label$2\n\t\t\t\t(block $label$3\n\t\t\t\t (br_if $label$3\n\t\t\t\t  (i32.lt_s\n\t\t\t\t   (get_local $1)\n\t\t\t\t   (i32.const 1)\n\t\t\t\t  )\n\t\t\t\t )\n\t\t\t\t (set_local $4\n\t\t\t\t  (i32.const 0)\n\t\t\t\t )\n\t\t\t\t (set_local $3\n\t\t\t\t  (i32.const 16)\n\t\t\t\t )\n\t\t\t\t (loop $label$4\n\t\t\t\t  (br_if $label$2\n\t\t\t\t   (i32.eqz\n\t\t\t\t\t(i32.rem_s\n\t\t\t\t\t (get_local $2)\n\t\t\t\t\t (i32.load\n\t\t\t\t\t  (get_local $3)\n\t\t\t\t\t )\n\t\t\t\t\t)\n\t\t\t\t   )\n\t\t\t\t  )\n\t\t\t\t  (set_local $3\n\t\t\t\t   (i32.add\n\t\t\t\t\t(get_local $3)\n\t\t\t\t\t(i32.const 4)\n\t\t\t\t   )\n\t\t\t\t  )\n\t\t\t\t  (br_if $label$4\n\t\t\t\t   (i32.lt_s\n\t\t\t\t\t(tee_local $4\n\t\t\t\t\t (i32.add\n\t\t\t\t\t  (get_local $4)\n\t\t\t\t\t  (i32.const 1)\n\t\t\t\t\t )\n\t\t\t\t\t)\n\t\t\t\t\t(get_local $1)\n\t\t\t\t   )\n\t\t\t\t  )\n\t\t\t\t )\n\t\t\t\t)\n\t\t\t\t(i32.store offset=12\n\t\t\t\t (i32.const 0)\n\t\t\t\t (tee_local $3\n\t\t\t\t  (i32.add\n\t\t\t\t   (get_local $1)\n\t\t\t\t   (i32.const 1)\n\t\t\t\t  )\n\t\t\t\t )\n\t\t\t\t)\n\t\t\t\t(i32.store\n\t\t\t\t (i32.add\n\t\t\t\t  (i32.shl\n\t\t\t\t   (get_local $1)\n\t\t\t\t   (i32.const 2)\n\t\t\t\t  )\n\t\t\t\t  (i32.const 16)\n\t\t\t\t )\n\t\t\t\t (get_local $2)\n\t\t\t\t)\n\t\t\t\t(set_local $1\n\t\t\t\t (get_local $3)\n\t\t\t\t)\n\t\t\t   )\n\t\t\t   (br_if $label$1\n\t\t\t\t(i32.ne\n\t\t\t\t (tee_local $2\n\t\t\t\t  (i32.add\n\t\t\t\t   (get_local $2)\n\t\t\t\t   (i32.const 1)\n\t\t\t\t  )\n\t\t\t\t )\n\t\t\t\t (get_local $0)\n\t\t\t\t)\n\t\t\t   )\n\t\t\t  )\n\t\t\t )\n\t\t\t (get_local $1)\n\t\t\t)\n\t\t   )\n\t\t   \n\t\t</code>\n\t</pre>\n\t</details>\n\t<details>\n\t<summary> Source Code CalcPrim.js</summary>\n\n\n\t<pre>\n\t\t  <code class=\"language-javascript\">\n\t\t  var prims = [];\n\n\t\t\tfunction testPrim(numb)\n\t\t\t{\n\t\t\t\tfor(let i = 0; i < prims.length;i++)\n\t\t\t\t{\n\t\t\t\t\tif(numb%prims[i]==0)\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tprims.push(numb);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconsole.time(\"CalcPrim\")\n\t\t\tfor(var i= 2; i<100000 ;i++)\n\t\t\t{\n\t\t\t\ttestPrim(i);\n\t\t\t}\n\t\t\tconsole.timeEnd(\"CalcPrim\")\n\t\t\tconsole.log(prims.length);\n\t\t\tconsole.log(prims);\n\n\t\t\t \n\t\t  </code>\n\t  </pre>\n\t  </details>\n\n\t  <details>\n\t<summary> Messergebnisse</summary>\n\t<h1>Hier werden die 2 Primzahlberechnungen für unterschiedliche Bereiche durchgeführt und angezeigt. Insgesamt wird jede Anzahl 10 mal berechnet.</h1>\n    <h2>Ein Refresh verursacht eine Neuberechnung und somit andere Werte</h2>\n\t<table>\n        <thead>\n          <tr>\n            <th></th>\n            <th colspan=\"3\">Messung JavaScript</th>\n            <th colspan=\"3\">Messung Wasm</th>\n            <th colspan=\"3\">Anzahl Primzahlen</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>min</th>\n            <th>max</th>\n            <th>avg</th>\n            <th>min</th>\n            <th>max</th>\n            <th>avg</th>\n          </tr>\n          <tr id=\"R10\">\n            <td>10</td>\n          </tr>\n          <tr  id=\"R100\">\n            <td>100</td>\n          </tr>\n          <tr id=\"R1000\">\n            <td>1000</td>\n          </tr>\n          <tr id=\"R10000\">\n            <td>10000</td>\n          </tr>\n          <tr id=\"R100000\">\n            <td>100000</td>\n          </tr>\n        </tbody>\n        </table>\n\n\t\n\t  </details>\n\t  <script>\n\t  function TimeTestFunction(f,amount)\n\t  {\n\t\t  var start = performance.now();\n\t\t  var result = f(amount);\n\t\t  var end = performance.now();\n\t\t  return {time: end-start, \"result\": result};\n\t  }\n  \n\t  function addTD(value,parent_element)\n\t  {\n\t\t  let td = document.createElement(\"td\");\n\t\t  td.innerHTML=value;\n\t\t  parent_element.append(td)\n\t  }\n\t  function getBenchmark(arr)\n\t  {\n\t\t  var min = Infinity;\n\t\t  var max = -Infinity;\n\t\t  var sum = 0;\n\t\t  var vals = [];\n\t\t  for(var i = 0; i < arr.length;i++)\n\t\t  {\n\t\t\t  var val = arr[i].time\n\t\t\t  if(val < min)\n\t\t\t\t  min = val;\n\t\t\t  if(val > max)\n\t\t\t\t  max = val;\n\t\t\t  sum+=val;\n\t\t\t  vals.push(val);\n\t\t  }\n  \n\t\t  var avg = sum/ arr.length;\n\t\t  \n\t\t  return {\n\t\t\t  min: min,\n\t\t\t  max: max,\n\t\t\t  avg: avg,\n\t\t\t  vals: vals\n\t\t  }\n\t  }\n  </script>\n  \n  \n  <script>\n  // Calc Prim in JavaScript\n  var prims = [];\n  \n  function testPrimJS(numb)\n  {\n\t  for(let i = 0; i < prims.length;i++)\n\t  {\n\t\t  if(numb%prims[i]==0)\n\t\t\t  return false;\n\t  }\n\t  prims.push(numb);\n\t  return true;\n  }\n  \n  function testprimsJS(amount)\n  {\n\t  prims = [];\n\t  for(var i= 2; i<amount ;i++)\n\t  {\n\t\t  testPrimJS(i);\n\t  }\n\t  return prims.length;\n  }\n  var MessungJS = [[],[],[],[],[]];\n  for(var i = 0; i <10;i++)\n  {\n\t  MessungJS[0].push(TimeTestFunction(testprimsJS,10))\n\t  MessungJS[1].push(TimeTestFunction(testprimsJS,100))\n\t  MessungJS[2].push(TimeTestFunction(testprimsJS,1000))\n\t  MessungJS[3].push(TimeTestFunction(testprimsJS,10000))\n\t  MessungJS[4].push(TimeTestFunction(testprimsJS,100000))\n  }\n  console.log(MessungJS);\n  \n  </script>\n  \n  <script>\n  \n  var MessungWASM = [[],[],[],[],[]];\n  fetch('/U11/CalcPrimZahlen.wasm').then(response =>\n\tresponse.arrayBuffer()\n  ).then(bytes =>\n\tWebAssembly.instantiate(bytes,{})\n  ).then(wasmInstance => {\n\t  console.time(\"CalcPrim-WASM\")\n\t  const {testPrims} = wasmInstance.instance.exports;\n  \n\t  for(var i = 0; i <10;i++)\n\t  {\n\t\t  MessungWASM[0].push(TimeTestFunction(testPrims,10))\n\t\t  MessungWASM[1].push(TimeTestFunction(testPrims,100))\n\t\t  MessungWASM[2].push(TimeTestFunction(testPrims,1000))\n\t\t  MessungWASM[3].push(TimeTestFunction(testPrims,10000))\n\t\t  MessungWASM[4].push(TimeTestFunction(testPrims,100000))\n\t  }\n\t  \n\t  for (var i = 0; i<5;i++)\n\t  {\n\t\t  element = document.getElementById(\"R\"+(Math.pow(10,(i+1))));\n\t\t  \n\t\t  var Messergebniss = getBenchmark(MessungJS[i])\n  \n\t\t  addTD(Messergebniss.min,element);\n\t\t  addTD(Messergebniss.max,element);\n\t\t  addTD(Messergebniss.avg,element);\n  \n\t\t  var Messergebniss = getBenchmark(MessungWASM[i])\n  \n\t\t  addTD(Messergebniss.min,element);\n\t\t  addTD(Messergebniss.max,element);\n\t\t  addTD(Messergebniss.avg,element);\n  \n\t\t  addTD(MessungJS[i][0].result,element);\n\t  }\n\t\t  \n  \n\t  \n  });\n  \n  \n  \n  \n  \n  \n  </script>\n\t\t\t\n\n\t\n\n\n\n`;\n\n  article.insertAdjacentHTML('beforeend', section);\n\n  return section;\n};\n","export const createPage11WatGGT = ({\n\n}) => {\n  const article = document.createElement('article');\n\n  const section = `\n  <style>\n.ggt1{\n\tbackground-color: #FF5555;\n\t\n}\n.ggtself{\n\tbackground-color: #333333;\n\tcolor: #FFFFFF;\n}\n\n    table, th, td {\n    border: 1px solid black;\n    }\n    \n    \n</style>\n  <script src=\"/Style/prism.js\"></script>\n  <link rel=\"stylesheet\" href=\"/Style/prism.css\">\n  <p>In dieser Aufgabe wurde eine Funktion für die Berechnung des GGTs von 2 Zahlen implementiert. Diese Implementierung wurde dabei in einer WAT-Datei geschrieben und zu WASM konvertiert. Getestet wurde diese Funktion mithilfe der Zahlen 1 - 100.</p>\n  <link rel=\"stylesheet\" href=\"/Style/SummaryStyle.css\">\n\n  <details>\n  <summary> Source Code ggt.wat</summary>\n\n\n  <pre>\n\t\t<code class=\"language-clike\">\n\t\t(module\n\t\t\t(func (export \"ggt\") (param i32)(param i32) (result i32)\n\t\t\t  (call $innerggt\n\t\t\t\t(get_local 0)\n\t\t\t\t(get_local 1)\n\t\t\t   )\n\t\t\t)\n\t\t\t(func $innerggt (param i32)(param i32) (result i32)\n\t\t\t  (if(result i32)\n\t\t\t   (i32.eq\n\t\t\t\t(i32.rem_s\n\t\t\t\t (get_local 0)\n\t\t\t\t (get_local 1)\n\t\t\t\t)\n\t\t\t\t(i32.const 0\n\t\t\t\t)\n\t\t\t   )\n\t\t\t   (then (get_local 1))\n\t\t\t   (else(call $innerggt\n\t\t\t\t(get_local 1)\n\t\t\t\t (i32.rem_s\n\t\t\t\t (get_local 0)\n\t\t\t\t (get_local 1))\n\t\t\t   ))\n\t\t\t  )\n\t\t\t)\n\t\t  )\n\t\t  \n\t\t\n\t\t</code>\n\t</pre>\n\t</details>\n  \n\t<details>\n\t<summary> Tabelle der GGTS (1-100)</summary>\n\t\t<table id=\"GGTs\"> </table> \n\t</details>\n\t\n\n \n\t\t\t\n\n\t\n\n<script>\n\nfunction addTD(value,parent_element,type=\"td\")\n{\n    let td = document.createElement(type);\n    td.innerHTML=value;\n    parent_element.append(td)\n\treturn td;\n}\n\n\n\n\n\n\n\n\nvar ggts = [];\nfetch('/U11/ggt.wasm').then(response =>\n  response.arrayBuffer()\n).then(bytes =>\n  WebAssembly.instantiate(bytes,{})\n).then(wasmInstance => {\n    \n    const {ggt} = wasmInstance.instance.exports;\n\n    for (let i = 1; i <= 100; i++) {\n\t\tfor (let j = 1; j <= 100; j++) {\n\t\t\tggts.push(\n\t\t\t{\"x\": i,\n\t\t\t \"y\": j,\n\t\t\t \"ggt\":ggt(i, j)\n\t\t\t})\n\t  }\n\t}\n\tconsole.log(ggts);\n\ttable = document.getElementById(\"GGTs\");\n\t//Header\n    tr = document.createElement(\"tr\");\n\taddTD(\" \",tr,\"th\");\n    for (var i = 1; i<101;i++)\n    {\n\t\taddTD(\"\"+i,tr,\"th\");\n    }\n\ttable.append(tr);\n    \n\t//Lines\n\ttr = document.createElement(\"tr\");\n    for (var i = 0; i<100;i++)\n    {\n\t\ttr = document.createElement(\"tr\");\n\t\taddTD(\" \"+(i+1),tr,\"th\");\n\t\tfor (var j = 0; j<100;j++)\n\t\t{\n\t\t\ttd = addTD(\"\"+ggts[(i*100)+j].ggt,tr);\n\t\t\tif(ggts[(i*100)+j].ggt ===1)\n\t\t\t{\n\t\t\t\ttd.classList.add(\"ggt1\");\n\t\t\t}\n\t\t\tif(ggts[(i*100)+j].y === ggts[(i*100)+j].x)\n\t\t\t{\n\t\t\t\ttd.classList.add(\"ggtself\");\n\t\t\t}\n\t\t}\n\t\ttable.append(tr);\n    }\n\t\n\n\n\n\n    \n});\n\n\n\n\n\n\n</script>\n\n\n\n`;\n\n  article.insertAdjacentHTML('beforeend', section);\n\n  return section;\n};\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AC5BA;AAEA;AACA;AAAA;AAEA;AA2cA;AAEA;AACA;;;;;;;;;;;;;;;;ACndA;AAEA;AACA;AAAA;AAEA;AA6JA;AAEA;AACA;;;;A","sourceRoot":""}