{"version":3,"file":"main.fa476bb81bbdcc20067d.hot-update.js","sources":["webpack:///./stories/Ubung7/Page7CreateFiles.js"],"sourcesContent":["export const createPage6createFiles = ({\n\n}) => {\n  const article = document.createElement('article');\n\n  const section = `\n  <script src=\"/Style/prism.js\"></script>\n  <link rel=\"stylesheet\" href=\"/Style/prism.css\">\n  <p>In dieser Aufgabe sollten zwei Node Kommandozeilen-Tools entwickelt werden. Die erste Anwendung soll eine Datei erstellen welche mit Zahlen gefühlt ist. Die andere Erstellt eine Datei welche mit Buchstaben gefühlt ist. Die Anzahl der Zeilen können als Parameter übergeben werden </p>\n  \n\n  <details>\n  <summary> Source Code des Buchstaben Genereator (alpha_file_gen.mjs)</summary>\n\n\n  <pre>\n\t\t<code class=\"language-javascript\">\n\t\timport fs from \"fs\"\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\texport function genAlphaFile(amount,filename,callback)\n\t\t{\n\t\t\t\n\t\t\tconsole.log(\"Create: \" + amount +\" lines\");\n\t\t\tif(filename === undefined)\n\t\t\t\tfilename = \"output.txt\";\n\t\t\t\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\tfs.writeFile(filename, createString(amount), function(err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn console.error(err);\n\t\t\t\t}\n\t\t\t\tconsole.log(\"Es wurde eine Datei '\" + filename + \"' mit \" + amount+ \" Zeilen erstellt.\");\n\t\t\t\tif(callback !== undefined)\n\t\t\t\t\tcallback();\n\t\t\t\tresolve();\n\t\t\t})\n\t\t\t});\n\t\t}\n\t\t\n\t\tfunction createString(amount)\n\t\t{\n\t\t\tamount = parseInt(amount);\n\t\t\tvar result = \"\";\n\t\t\tfor(var i=0; i < amount; i++)\n\t\t\t{\n\t\t\t\tresult+= getChar(i) + \"\\r\\n\"\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\t\n\t\tfunction getChar(val)\n\t\t{\n\t\t\tif(val < 26)\n\t\t\t{\n\t\t\t\treturn String.fromCharCode(65 + val);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn getChar(val/26-1) + getChar(val%26);\n\t\t\t}\n\t\t}\n\t\t\n\t\t</code>\n\t</pre>\n\t</details>\n\t<a href=\"/U7/Alpha.txt\">Beispieldatei mit 10000 Zeilen (Buchstaben)</a>\n\t<br>\n\t<br>\n\t<details>\n\t<summary> Source Code des Zahlen Genereator (number_file_gen.mjs)</summary>\n  \n  \n\t<pre>\n\t\t  <code class=\"language-javascript\">\n\t\timport http from 'http';\n\t\timport fs from \"fs\"\n\n\n\n\n\t\texport function genNumberFile(amount,filename,callback)\n\t\t{\n\t\t\tconsole.log(\"Create: \" + amount +\" lines\");\n\t\t\tif(filename === undefined)\n\t\t\t\tfilename = \"output.txt\";\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tfs.writeFile(filename, createString(amount), function(err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject();\n\t\t\t\t\treturn console.error(err);\n\t\t\t\t}\n\t\t\t\tconsole.log(\"Es wurde eine Datei '\" + filename + \"' mit \" + amount+ \" Zeilen erstellt.\");\n\t\t\t\tif(callback !== undefined)\n\t\t\t\t\tcallback();\n\t\t\t\tresolve();\n\t\t\t});\n\t\t\t});\n\t\t}\n\t\t/*\n\t\tif(process.argv.length >= 3)\n\t\t{\n\t\t\tvar amount = process.argv[2];\n\t\t\tconsole.log(\"Create: \" + amount +\" lines\");\n\t\t\t\n\t\t\tvar filename = \"output.txt\"\n\t\t\tif(process.argv.length >= 4)\n\t\t\t\tfilename = process.argv[3];\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfs.writeFile(filename, createString(amount), function(err) {\n\t\t\tif (err) {\n\t\t\t\treturn console.error(err);\n\t\t\t}\n\t\t\tconsole.warn(\"Es wurde eine Datei '\" + filename + \"' mit \" + amount+ \" Zeilen erstellt.\");\n\t\t\t});\n\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(\"node [amount] [filename]\");\n\t\t}*/\n\n\n\t\t/*\n\t\tconst server = http.createServer((req, res) => {\n\t\tres.statusCode = 200;\n\t\t\n\t\tres.setHeader('Content-Type', 'text/plain');\n\t\tif(process.argv.length == 3)\n\t\t\t\n\t\tres.end(\"\");\n\t\t});\n\n\n\t\t  \n\t\t  </code>\n\t  </pre>\n\t  </details>\n\t  \n\t<a href=\"/U7/number.txt\">Beispieldatei mit 10000 Zeilen (Zahlen)</a>\n\n`;\n\n  article.insertAdjacentHTML('beforeend', section);\n\n  return section;\n};\n"],"mappings":";;;;;;;;;;;;;;AAAA;AAEA;AACA;AAAA;AAEA;AAmJA;AAEA;AACA;;;;A","sourceRoot":""}